# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
    paths:
      - 'src/**'
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn clean install -DskipTests
    - name: Login to docker registry
      uses: docker/login-action@v3
      with:
        username: ${{secrets.DOCKERHUB_USERNAME}}
        password: ${{secrets.DOCKERHUB_TOKEN}}
    - name: build and push docker image to DockerHub
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: quangkhanh288/attendance-server:latest
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
        - name: executing remote ssh commands
          uses: appleboy/ssh-action@v1.1.0
          with:
            host: ${{ secrets.HOST }}
            username: ${{ secrets.USERNAME }}
            key: ${{ secrets.KEY }}
            port: ${{ secrets.PORT }}
            script_stop: true
            script: |

#  deploy:
#    name: Write Script to Remote Server
#    runs-on: ubuntu-latest
#    steps:
#      # Step 1: Checkout the repository (if needed)
#      - name: Checkout the repository
#        uses: actions/checkout@v3
#
#      # Step 2: Set up SSH Agent to authenticate with the remote server
#      - name: Start SSH Agent
#        run: |
#          eval "$(ssh-agent -s)"
#          ssh-add /home/runner/.ssh/id_rsa # Adjust this path to your SSH key location
#      - name: Create a script to pull Docker image
#        run: |
#            echo "#!/bin/bash" > script.ps1
#            echo "docker pull quangkhanh288/attendance-server:latest" >> script.ps1
#            chmod +x script.ps1
#
#      # Step 4: Copy the script to the remote server
#      - name: Copy the script to the remote server
#        run: |
#          scp -o StrictHostKeyChecking=no script.ps1 'NITRO 5'@192.168.1.10:C:\Users\NITRO\ 5\remote-path\
#
#      # Step 5: Execute the script on the remote server
#      - name: Execute the script on remote server
#        run: |
#          ssh -o StrictHostKeyChecking=no 'NITRO 5'@192.168.1.10 "powershell -ExecutionPolicy Bypass -File 'C:\Users\NITRO 5\remote-path\script.ps1'"

